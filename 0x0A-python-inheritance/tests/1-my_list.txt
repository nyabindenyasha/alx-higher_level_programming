The ``1-my_list`` module
======================

Using ``MyList Class``
-------------------

A function that prints the list, but sorted (ascending sort):

First import ``MyList`` from the ``1-my_list.py`` module:
>>> MyList = __import__('1-my_list').MyList


* check MyList inherits from list
>>> my_list = MyList([4, 23, 8, 9])
>>> isinstance(my_list, list)
True


* check __str__ is inherited
>>> my_list = MyList([4, 23, 8, 9])
>>> my_list.__str__()
'[4, 23, 8, 9]'

* check append works correctly
>>> my_list = MyList([5, -2, -3])
>>> my_list.append(23)
>>> print(my_list)
[5, -2, -3, 23]

* print_sorted method works properly with pos ints
>>> my_list = MyList([4, 23, 8, 9])
>>> my_list.print_sorted()
[4, 8, 9, 23]

* print_sorted method works properly with neg ints
>>> my_list = MyList([-4, -23, -8, -9])
>>> my_list.print_sorted()
[-23, -9, -8, -4]

* print_sorted method works properly with append
>>> my_list = MyList([])
>>> my_list.append(1)
>>> my_list.append(132)
>>> my_list.append(832)
>>> my_list.print_sorted()
[1, 132, 832]

* print_sorted method works properly with append
>>> my_list = MyList([])
>>> my_list.append(-1)
>>> my_list.append(-132)
>>> my_list.append(-832)
>>> my_list.print_sorted()
[-832, -132, -1]

* print_sorted method works properly with append
>>> my_list = MyList([])
>>> my_list.append(-1)
>>> my_list.append(-132)
>>> my_list.append(-832)
>>> my_list.print_sorted()
[-832, -132, -1]

* check print_sorted for empty list
>>> my_list = MyList([])
>>> my_list.print_sorted()
[]

* check print_sorted returns a new list
>>> my_list = MyList([2, 20, -4, 5])
>>> print(my_list)
[2, 20, -4, 5]
>>> my_list.print_sorted()
[-4, 2, 5, 20]
>>> print(my_list)
[2, 20, -4, 5]
